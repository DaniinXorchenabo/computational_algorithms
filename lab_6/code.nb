
GlobalFunc[XX_] := (1 + Cos[XX]) * Exp[ XX ];

rectangleMethod[oldFrom_, oldTo_, funcFromParam_, eps_] := (
    locFrom = oldFrom;
    locTo = oldTo;
    locFunc[XXX_] = funcFromParam[XXX];
    lastSumm = 100;
    summ = 0;
    sums = {};
    For[
        locSetup1 = 1,
        Abs[lastSumm - summ] >= eps,
        locSetup1 = locSetup1 / 2;
        lastSumm = summ;
        summ = 0;

        For[
            i = a - locSetup1,
            i < b,
            i += locSetup1;
            summ += locFunc[i];
        ];
        summ = summ * locSetup1;
        sums = Append[sums, N[locSetup1, 20] -> N[summ, 20]];
    ];

    {"sum" -> N[summ, 20], "a" -> locFrom, "b" -> locTo, "history" -> sums}

);

trapezoidMethod[oldFrom_, oldTo_, funcFromParam_, eps_] := (
    locFrom = oldFrom;
    locTo = oldTo;
    locFunc[XXX_] = funcFromParam[XXX];
    lastSumm = 100;
    summ = 0;
    sums = {};
    For[
        locSetup2 = 1,
        Abs[lastSumm - summ] > eps,
        locSetup2 = locSetup2 / 2;
        lastSumm = summ;
        summ = 0;
        For[
            i = locFrom,
            i < locTo - locSetup2,
            i += locSetup2;
            summ += locFunc[i];
        ];
        summ = (summ + (locFunc[locFrom] + locFunc[locTo]) / 2) * locSetup2 ;
        sums = Append[sums, N[locSetup2, 20] -> N[summ, 20]];
    ];
    {"sum" -> N[summ, 20], "a" -> locFrom, "b" -> locTo, "history" -> sums}
);


Simson2Method[oldFrom_, oldTo_, funcFromParam_, eps_] := (
    locFrom = oldFrom;
    locTo = oldTo;
    locFunc[XXX_] = funcFromParam[XXX];
    lastSumm = 100;
    summm = 0;
    n = 2;
    sums = {};
    For[
        n = 2,
        Abs[lastSumm - summm ] >= eps / 2,
        n = n * 2;
        dx = 1.0 * (locTo - locFrom) / n;
        lastSumm = summm;
        summm = locFunc[locFrom] + 4 * locFunc[locFrom + dx] + locFunc[locTo];
        For[
            i = 0,
            i < IntegerPart[n / 2],
            i += 1;
            summm +=  2 * locFunc[locFrom + (2 * i) * dx] + 4 * locFunc[locFrom + (2 * i + 1) * dx ];
        ];
        summm =  summm * dx / 3 ;
        sums = Append[ sums, N[dx, 20] -> N[summm, 20] ];
    ];
    {"sum" -> N[summm, 20], "a" -> locFrom, "b" -> locTo, "history" -> sums}
);

res1 = rectangleMethod[a, b, GlobalFunc, eps];
res2 = trapezoidMethod[a, b, GlobalFunc, eps];
res3 = Simson2Method[a, b, GlobalFunc, eps];

{"rectangle" -> res1, "trapezoid" -> res2, "simson" -> res3}